How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    This functionality looked like it could save you a lot of time, especially in understanding 
	how different versions of code were different and where they were different.  I really liked 
	that you could get specific lines of code that had changed  

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Can quickly see how your code/project has changed over time, how long 
	individual sections took, and revert back to an older version if it worked better
	Also would allow you to compare an older version of code with a newer version
	in terms of speed and efficiency						

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    While you control when you save, it might not be good if you are lazy and don't have
	good saving habits.  That being said, if you get into it, and make a commit per
	logical change, you create a good history of your code that you can visit at a later time

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In an automatic saving file, you could mess up multiple things, but if you are doing 
	it manually, it can be easier to make the changes across multiple files.
	
How can you use the commands git log and git diff to view the history of files?

    Allows documentation of changes throughout time.  Using diff, you can identify what was added and what was 
	removed in individual files and for different line items

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here